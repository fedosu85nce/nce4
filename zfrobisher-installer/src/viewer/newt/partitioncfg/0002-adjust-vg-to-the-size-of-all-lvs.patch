From cc56aa667d7f1d081ea220cc9f1005ebe098815b Mon Sep 17 00:00:00 2001
From: Tao Wu <bjwt@linux.vnet.ibm.com>
Date: Mon, 9 Feb 2015 17:30:41 +0800
Subject: [PATCH 2/3] adjust vg to the size of all lvs reset when back to
 select disks add back button in the select disk for standard partition adjust
 some size display

Signed-off-by: Tao Wu <bjwt@linux.vnet.ibm.com>
---
 src/viewer/newt/partitioncfg/partition_interface.py |  3 ++-
 src/viewer/newt/partitioncfg/partitioner.py         |  8 ++++++++
 src/viewer/newt/partitioncfg/select_disk.py         | 10 +++++++---
 src/viewer/newt/partitioncfg/select_vg.py           | 12 ++++++------
 4 files changed, 23 insertions(+), 10 deletions(-)

diff --git a/src/viewer/newt/partitioncfg/partition_interface.py b/src/viewer/newt/partitioncfg/partition_interface.py
index 06fb774..04167cd 100644
--- a/src/viewer/newt/partitioncfg/partition_interface.py
+++ b/src/viewer/newt/partitioncfg/partition_interface.py
@@ -45,7 +45,7 @@ class PartitionInterface:
     def __init__(self, screen):
         # 1. Store parameters
         self._raw_partitioner = Partitioner()
-        self._screen = SnackScreen()
+        self._screen = screen
         logging.basicConfig(filename="log.txt", level=logging.DEBUG)
 
     def run(self, runOn = "LPAR"):
@@ -56,6 +56,7 @@ class PartitionInterface:
                 break
             # 1. Select the disks used for partitioning
             if index == INDEX_SELECT_DISKS:
+                self._raw_partitioner._storage.reset()
                 self._partitioner = self._raw_partitioner.copy()
                 self._initialzePartitions()
                 index = self._selectDisks()
diff --git a/src/viewer/newt/partitioncfg/partitioner.py b/src/viewer/newt/partitioncfg/partitioner.py
index 9fa95dd..f220ed6 100644
--- a/src/viewer/newt/partitioncfg/partitioner.py
+++ b/src/viewer/newt/partitioncfg/partitioner.py
@@ -69,8 +69,16 @@ class Partitioner:
         partition.device = None
 
     def removeLogicalVolume(self, partition):
+        vgName = partition.device.vg.name
         self._storage.destroyDevice(partition.device)
         partition.device = None
+        # adjust VG to size of remaining LVs
+        factory = blivet.devicefactory.get_device_factory(self._storage,
+                                          DEVICE_TYPE_LVM, 0,
+                                          container_name=vgName,
+                                          container_size=SIZE_POLICY_AUTO)
+        factory.configure()
+
 
     def removeLogicalVolumeGroup(self, vg, partitions):
         if vg in self._newVgs.keys():
diff --git a/src/viewer/newt/partitioncfg/select_disk.py b/src/viewer/newt/partitioncfg/select_disk.py
index 8d374c9..1a07936 100644
--- a/src/viewer/newt/partitioncfg/select_disk.py
+++ b/src/viewer/newt/partitioncfg/select_disk.py
@@ -11,6 +11,7 @@ from partitioner import *
 from viewer.__data__ import PART_TITLE_STDDESC
 from viewer.__data__ import PART_TITLE_STD
 from viewer.__data__ import PART_BUTTON_OK
+from viewer.__data__ import PART_BUTTON_BACK
 
 #
 # CODE
@@ -54,7 +55,9 @@ class SelectDisk:
         #   Buttons
         self._buttonBar = ButtonBar(screen,
                                     [(PART_BUTTON_OK.localize(),
-                                      PART_BUTTON_OK.localize())])
+                                      PART_BUTTON_OK.localize()),
+                                     (PART_BUTTON_BACK.localize(),
+                                      PART_BUTTON_BACK.localize())])
         # 3. Build form
         self._form = GridForm(self._screen, PART_TITLE_STD.localize(), 1, 3)
         self._form.add(self._diskInfo, 0, 0)
@@ -68,7 +71,8 @@ class SelectDisk:
         # Parse result
         rc = self._buttonBar.buttonPressed(result)
 
-        selectedDisk = self._diskList.current()
-        self._partitioner.createStandardPartition(self._partition,
+        if rc == PART_BUTTON_OK.localize():
+          selectedDisk = self._diskList.current()
+          self._partitioner.createStandardPartition(self._partition,
                                                   selectedDisk)
         return PART_BUTTON_OK.localize()
diff --git a/src/viewer/newt/partitioncfg/select_vg.py b/src/viewer/newt/partitioncfg/select_vg.py
index 0cd74d4..93995b9 100644
--- a/src/viewer/newt/partitioncfg/select_vg.py
+++ b/src/viewer/newt/partitioncfg/select_vg.py
@@ -71,12 +71,12 @@ class SelectVg:
         self._nameGrid.setField(self._name, 1, 0, anchorLeft=1)
 
         #   Disk Tree
-        self._diskTree = CheckboxTree(5, scroll=1, width=30)
+        self._diskTree = CheckboxTree(5, scroll=1, width=35)
         freeSpaces = self._partitioner.getFreeSpace(self._disks)
         for disk in self._disks:
             if vg is None:
                 self._diskTree.addItem(
-                    "%s    %s     %.2fMB" %
+                    "%s    %-9s  %.2fMB" %
                     (disk.name, disk.size,
                      (float)(freeSpaces[disk.name][0].convertTo("m"))),
                     (snackArgs['append'], ),
@@ -84,14 +84,14 @@ class SelectVg:
             else:
                 if self._partitioner.vgInDisk(vg, disk):
                     self._diskTree.addItem(
-                        "%s    %s     %.2fMB" %
+                        "%s    %-9s  %.2fMB" %
                         (disk.name, disk.size,
                          (float)(freeSpaces[disk.name][0].convertTo("m"))),
                         (snackArgs['append'], ),
                         disk, 1)
                 else:
                     self._diskTree.addItem(
-                        "%s    %s     %.2fMB" %
+                        "%s    %-9s  %.2fMB" %
                         (disk.name, disk.size,
                          (float)(freeSpaces[disk.name][0].convertTo("m"))),
                         (snackArgs['append'], ),
@@ -104,7 +104,7 @@ class SelectVg:
                               wrap=1)
         self._freeLabel = Label(PART_LABEL_FREE.localize())
         self._free = Textbox(10, 1,
-                             "%dMB" % vg.freeSpace if vg is not None else "",
+                             "%dMB" % max(0,vg.freeSpace) if vg is not None else "",
                              wrap=1)
         self._infoGrid.setField(self._totalLabel, 0, 0)
         self._infoGrid.setField(self._total, 1, 0)
@@ -222,7 +222,7 @@ class SelectVg:
         else:
             self._policyList.setCurrent(SIZE_POLICY_AUTO)
         self._total.setText("%dMB" % vg.size if vg is not None else "     ")
-        self._free.setText("%dMB" % vg.freeSpace if
+        self._free.setText("%dMB" % max(0,vg.freeSpace) if
                            vg is not None else "     ")
 
     def on_policy_selected(self):
-- 
1.9.3

